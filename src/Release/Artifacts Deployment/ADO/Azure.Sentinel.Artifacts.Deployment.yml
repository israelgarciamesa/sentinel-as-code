# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pool:
  vmImage: 'windows-latest'

parameters:
  - name: ServiceConnectionName
    displayName: Azure Environment Connection
    type: string  
  - name: UsePreRelease
    displayName: Use Powershell Pre-Release Artifacts
    type: boolean
    default: false

variables:
  - name: ResourceGroupName
  - name: ResourceName

resources:
  repositories:
  - repository: AzureSentinelRules
    type: git
    name: SOC/Artifacts
    ref: $(Build.SourceBranchName)

steps:
- checkout: self
- checkout: AzureSentinelRules

- task: NuGetToolInstaller@1
  displayName: Setup Nuget Tools
  name: NugetToolSetup
  inputs:
    versionSpec: 
    checkLatest: true

- task: NuGetAuthenticate@0
  condition: succeeded()
  displayName: Authenticating with Sentinel Nuget
  name: NugetAuthentication
  inputs:
    nuGetServiceConnections: 'Nuget Framework Connection'

- task: PowerShell@2
  condition: succeeded()
  displayName: Resolving Feed Url
  name: FeedUriResolver
  inputs:
    targetType: 'inline'
    script: |
      $FeedManifest = $Env:VSS_NUGET_EXTERNAL_FEED_ENDPOINTS | ConvertFrom-Json
      Write-Host "##vso[task.setvariable variable=FEED_URL;issecret=false;]$($FeedManifest.endpointCredentials.endpoint)"

- task: PowerShell@2
  displayName: DevOps Artifact Feed
  condition: succeeded()
  name: ConnectArtifactFeed
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      nuget.exe sources add -Name NugetFramework -Source $(FEED_URL) -Username "PAT" -Password $(VSS_NUGET_ACCESSTOKEN) 
      $(Build.SourcesDirectory)/src/Build/Framework/Azure.Sentinel.Powershell.Nuget.Connect.ps1 -NuGetApiKey "$(VSS_NUGET_ACCESSTOKEN)" -Location $(FEED_URL) -Name NugetFramework
      try {
        $Credentials = $(Build.SourcesDirectory)/src/Build/Framework/Azure.Sentinel.Powershell.Nuget.Credentials.ps1 -NuGetApiKey "$(VSS_NUGET_ACCESSTOKEN)"
        $AllowPrerelease = [bool]::Parse("${{ parameters.UsePreRelease }}")
        Install-Module -Name "Azure.Deployment.Environment" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
        Install-Module -Name "Azure.Sentinel.Rules" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
        Install-Module -Name "Azure.Sentinel.Playbooks" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
        Install-Module -Name "Azure.Sentinel.Workbooks" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
        Install-Module -Name "Azure.Sentinel.Watchlist" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
        Install-Module -Name "Azure.Sentinel.Automation" -Repository "NugetFramework" -Scope CurrentUser -AllowPrerelease:$AllowPrerelease -Credential $Credentials
      }
      finally {
        (Get-Module -Name Azure.Deployment.Environment -ListAvailable) | ft Name, Version
        (Get-Module -Name Azure.Sentinel.Rules -ListAvailable) | ft Name, Version
        (Get-Module -Name Azure.Sentinel.Playbooks -ListAvailable) | ft Name, Version
        (Get-Module -Name Azure.Sentinel.Workbooks -ListAvailable) | ft Name, Version
        (Get-Module -Name Azure.Sentinel.Watchlist -ListAvailable) | ft Name, Version
        (Get-Module -Name Azure.Sentinel.Automation -ListAvailable) | ft Name, Version
        $(Build.SourcesDirectory)/src/Build/Framework/Azure.Sentinel.Powershell.Nuget.Disconnect.ps1 -Name NugetFramework
      }

- task: AzurePowerShell@5
  name: ResourceSettings
  displayName: Resolve Sentinel Workspace
  inputs:
    azureSubscription: ${{ parameters.ServiceConnectionName }}
    ScriptType: 'InlineScript'
    Inline: |
          Import-Module -Name $(System.DefaultWorkingDirectory)/src/Release/Common/Azure.DevOps.Extensions.psm1
          $Environment = $(System.DefaultWorkingDirectory)/src/Release/Common/Azure.Environments.ps1 -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Deploy/Environments
          $Environment
          Set-AzureDevOpsVariable ResourceGroupName = $Environment.ResourceGroupName
          Set-AzureDevOpsVariable ResourceName = $Environment.LogAnalyticsWorkspaceName
    azurePowerShellVersion: 'LatestVersion'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Watchlist
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Watchlist.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ '
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Analytic Rules
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Alerts.Rules.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -Format All'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Hunting Rules
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Hunting.Rules.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -Format All'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Sentinel Environment Variables 
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Common/Azure.Deployment.Environment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroupName $(ResourceGroupName) -Path $(Agent.TempDirectory)/Settings.json'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Runbooks
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/Framework/Src/Deploy/Automation/Azure.Automation.Runbooks.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -SettingsFile $(Agent.TempDirectory)/Settings.json'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Playbooks
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Playbooks.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -SettingsFile $(Agent.TempDirectory)/Settings.json'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Automation Rules
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Automation.Rules.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -SettingsFile $(Agent.TempDirectory)/Settings.json -Format All'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Alert-Playbook Connections
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Alerts.RulesPlaybookConnection.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ -Format All -SettingsFile $(Agent.TempDirectory)/Settings.json'
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true

- task: AzurePowerShell@5
  displayName: Deploy Workbooks
  inputs:
    azureSubscription: '${{ parameters.ServiceConnectionName }}'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)/src/Release/Artifacts Deployment/Scripts/Azure.Sentinel.Workbooks.Deployment.ps1'
    workingDirectory: $(System.DefaultWorkingDirectory)/Framework
    ScriptArguments: '-ResourceGroup $(ResourceGroupName) -Workspace $(ResourceName) -Path $(System.DefaultWorkingDirectory)/Artifacts/Src/Dev/ '
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true
